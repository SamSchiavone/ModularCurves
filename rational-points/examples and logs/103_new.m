load "new_models.m";
//Loading "new_models.m"
// load "X0p_NiceModel.m";
//Loading "X0p_NiceModel.m"
load "Chabauty_MWSieve_new.m";

SetMemoryLimit(30579344000);

//we find models for X and X/w103

C := CuspForms(103);
"Dimension of CuspForms(103) is: ", Dimension(C);
//Dimension of CuspForms(103) is:  8
g:=Dimension(C);
AL := AtkinLehnerOperator(C, 103);
N := Nullspace(Matrix(AL - 1));

"Dimesion of eigenspace lambda = 1 for w103 is: ", Dimension(N);
//Dimesion of eigenspace lambda = 1 for w103 is:  2

Nc := Nullspace(Matrix(AL + 1));

"Dimension of eigenspace lambda = -1 for w103 is: ", Dimension(Nc);
//Dimension of eigenspace lambda = -1 for w103 is:  6
 "";


B := [&+[(Integers()!(2*Eltseq(Basis(N)[i])[j]))*C.j : j in [1..Dimension(C)]] : i in [1..Dimension(N)]];
Bc := [&+[(Integers()!(2*Eltseq(Basis(Nc)[i])[j]))*C.j : j in [1..Dimension(C)]] : i in [1..Dimension(Nc)]];


//X := modformeqns(Bc, B, 103, 500, false);
//let's change this to Philippe's code

X, ws, list := eqs_quos(103, [[103]]);
w := ws;
Xw := list[1][1];
quotMap := list[1][2];
Xw;
//Hyperelliptic Curve defined by y^2 = x^6 + 2*x^4 - 2*x^3 + 5*x^2 - 6*x + 1 over Rational Field
RR<[v]> := CoordinateRing(AmbientSpace(Xw));
"Genus of X0(103) is ", Genus(X);
//Genus of X0(103) is  8
"Genus of X0(103)/w103 is ", Genus(Xw);
//Genus of X0(103)/w103 is  2
ptsX:=PointSearch(X,1);
P1:=ptsX[1];
P2:=ptsX[2];
deg2pb:=[];
pls1 := [Place(P1), Place(P2)];
deg2:=[];

w := w[1];
for i in [1..#pls1] do
  for j in [i..#pls1] do
    deg2 := Append(deg2, 1*pls1[i] + 1*pls1[j]);
    try
      if w(RepresentativePoint(pls1[i])) eq RepresentativePoint(pls1[j]) then
        deg2pb := Append(deg2pb, 1*pls1[i] + 1*pls1[j]);
      end if;
    catch e
      continue;
    end try;
   end for;
end for;

#deg2;
//1
w;
/*[
    Mapping from: Curve over Rational Field defined by
    x[1]^2 - x[3]^2 + 2*x[4]^2 + 6*x[4]*x[5] + 5*x[5]^2 - 2*x[5]*x[6] - 44*x[5]*x[8] - 7*x[6]^2 - 14*x[6]*x[7] + 24*x[6]*x[8] + 23*x[7]^2 - 4*x[7]*x[8] + 43*x[8]^2,
    x[1]*x[2] - x[3]*x[4] + 4*x[4]*x[5] + 4*x[5]^2 + x[5]*x[6] - 34*x[5]*x[8] - 4*x[6]^2 - 8*x[6]*x[7] + 12*x[6]*x[8] + 10*x[7]^2 + 6*x[7]*x[8] + 27*x[8]^2,
    x[1]*x[4] + 4*x[1]*x[8] - x[2]*x[3] - 2*x[2]*x[5] + 2*x[2]*x[6] - 4*x[2]*x[7] - x[2]*x[8],
    x[1]*x[5] - 5*x[1]*x[8] - x[2]*x[4] - 2*x[2]*x[6] + 3*x[2]*x[7] + 3*x[2]*x[8],
    x[1]*x[6] + x[1]*x[8] - x[2]*x[5],
    x[1]*x[7] - 3*x[1]*x[8] - x[2]*x[6] + x[2]*x[7] + 2*x[2]*x[8],
    x[2]^2 - x[4]^2 + 6*x[5]^2 + 2*x[5]*x[6] - 36*x[5]*x[8] - 7*x[6]^2 + 10*x[6]*x[7] + 2*x[6]*x[8] + x[7]^2 + 22*x[7]*x[8] + 20*x[8]^2,
    x[3]*x[5] - x[4]^2 + x[5]*x[6] + 3*x[5]*x[8] + 2*x[6]*x[7] - 3*x[6]*x[8] - x[7]^2 + 2*x[7]*x[8] - 3*x[8]^2,
    x[3]*x[6] - x[4]*x[5] + 2*x[5]*x[6] - x[5]*x[8] - x[6]^2 + 3*x[6]*x[7] - 2*x[6]*x[8] + 2*x[7]*x[8],
    x[3]*x[7] - x[5]^2 + x[5]*x[6] + 3*x[5]*x[8] + x[6]*x[7] - 2*x[6]*x[8] + x[7]^2 - 2*x[8]^2,
    x[3]*x[8] - x[5]*x[8] - x[6]^2 + x[6]*x[7] + x[6]*x[8] + 2*x[7]*x[8] + x[8]^2,
    x[4]*x[6] - x[5]^2 + 6*x[5]*x[8] + 2*x[6]^2 - 2*x[6]*x[7] - 2*x[6]*x[8] - x[7]^2 - 2*x[7]*x[8] - 4*x[8]^2,
    x[4]*x[7] - x[5]*x[6] + 2*x[5]*x[8] + x[6]^2 - 2*x[6]*x[7] + x[6]*x[8] - 3*x[7]*x[8],
    x[4]*x[8] - x[5]*x[8] - x[6]*x[7] + x[6]*x[8] + x[7]^2 - x[7]*x[8] + x[8]^2,
    x[5]*x[7] - 3*x[5]*x[8] - x[6]^2 + x[6]*x[7] + x[6]*x[8] + x[7]*x[8] + 2*x[8]^2 to Curve over Rational Field defined by
    x[1]^2 - x[3]^2 + 2*x[4]^2 + 6*x[4]*x[5] + 5*x[5]^2 - 2*x[5]*x[6] - 44*x[5]*x[8] - 7*x[6]^2 - 14*x[6]*x[7] + 24*x[6]*x[8] + 23*x[7]^2 - 4*x[7]*x[8] + 43*x[8]^2,
    x[1]*x[2] - x[3]*x[4] + 4*x[4]*x[5] + 4*x[5]^2 + x[5]*x[6] - 34*x[5]*x[8] - 4*x[6]^2 - 8*x[6]*x[7] + 12*x[6]*x[8] + 10*x[7]^2 + 6*x[7]*x[8] + 27*x[8]^2,
    x[1]*x[4] + 4*x[1]*x[8] - x[2]*x[3] - 2*x[2]*x[5] + 2*x[2]*x[6] - 4*x[2]*x[7] - x[2]*x[8],
    x[1]*x[5] - 5*x[1]*x[8] - x[2]*x[4] - 2*x[2]*x[6] + 3*x[2]*x[7] + 3*x[2]*x[8],
    x[1]*x[6] + x[1]*x[8] - x[2]*x[5],
    x[1]*x[7] - 3*x[1]*x[8] - x[2]*x[6] + x[2]*x[7] + 2*x[2]*x[8],
    x[2]^2 - x[4]^2 + 6*x[5]^2 + 2*x[5]*x[6] - 36*x[5]*x[8] - 7*x[6]^2 + 10*x[6]*x[7] + 2*x[6]*x[8] + x[7]^2 + 22*x[7]*x[8] + 20*x[8]^2,
    x[3]*x[5] - x[4]^2 + x[5]*x[6] + 3*x[5]*x[8] + 2*x[6]*x[7] - 3*x[6]*x[8] - x[7]^2 + 2*x[7]*x[8] - 3*x[8]^2,
    x[3]*x[6] - x[4]*x[5] + 2*x[5]*x[6] - x[5]*x[8] - x[6]^2 + 3*x[6]*x[7] - 2*x[6]*x[8] + 2*x[7]*x[8],
    x[3]*x[7] - x[5]^2 + x[5]*x[6] + 3*x[5]*x[8] + x[6]*x[7] - 2*x[6]*x[8] + x[7]^2 - 2*x[8]^2,
    x[3]*x[8] - x[5]*x[8] - x[6]^2 + x[6]*x[7] + x[6]*x[8] + 2*x[7]*x[8] + x[8]^2,
    x[4]*x[6] - x[5]^2 + 6*x[5]*x[8] + 2*x[6]^2 - 2*x[6]*x[7] - 2*x[6]*x[8] - x[7]^2 - 2*x[7]*x[8] - 4*x[8]^2,
    x[4]*x[7] - x[5]*x[6] + 2*x[5]*x[8] + x[6]^2 - 2*x[6]*x[7] + x[6]*x[8] - 3*x[7]*x[8],
    x[4]*x[8] - x[5]*x[8] - x[6]*x[7] + x[6]*x[8] + x[7]^2 - x[7]*x[8] + x[8]^2,
    x[5]*x[7] - 3*x[5]*x[8] - x[6]^2 + x[6]*x[7] + x[6]*x[8] + x[7]*x[8] + 2*x[8]^2
    with equations :
    x[1]
    x[2]
    -x[3]
    -x[4]
    -x[5]
    -x[6]
    -x[7]
    -x[8]
    and inverse
    x[1]
    x[2]
    -x[3]
    -x[4]
    -x[5]
    -x[6]
    -x[7]
    -x[8]
]*/
Type(w);
//SeqEnum

#deg2;
//2
Dtor:=Divisor(P1)-Divisor(P2);
Dtor;
/*Divisor on Curve over Rational Field defined by
x[1]^2 - x[3]^2 + 2*x[4]^2 + 6*x[4]*x[5] + 5*x[5]^2 - 2*x[5]*x[6] - 44*x[5]*x[8] - 7*x[6]^2 - 14*x[6]*x[7] + 24*x[6]*x[8] + 23*x[7]^2 - 4*x[7]*x[8] + 43*x[8]^2,
x[1]*x[2] - x[3]*x[4] + 4*x[4]*x[5] + 4*x[5]^2 + x[5]*x[6] - 34*x[5]*x[8] - 4*x[6]^2 - 8*x[6]*x[7] + 12*x[6]*x[8] + 10*x[7]^2 + 6*x[7]*x[8] + 27*x[8]^2,
x[1]*x[4] + 4*x[1]*x[8] - x[2]*x[3] - 2*x[2]*x[5] + 2*x[2]*x[6] - 4*x[2]*x[7] - x[2]*x[8],
x[1]*x[5] - 5*x[1]*x[8] - x[2]*x[4] - 2*x[2]*x[6] + 3*x[2]*x[7] + 3*x[2]*x[8],
x[1]*x[6] + x[1]*x[8] - x[2]*x[5],
x[1]*x[7] - 3*x[1]*x[8] - x[2]*x[6] + x[2]*x[7] + 2*x[2]*x[8],
x[2]^2 - x[4]^2 + 6*x[5]^2 + 2*x[5]*x[6] - 36*x[5]*x[8] - 7*x[6]^2 + 10*x[6]*x[7] + 2*x[6]*x[8] + x[7]^2 + 22*x[7]*x[8] + 20*x[8]^2,
x[3]*x[5] - x[4]^2 + x[5]*x[6] + 3*x[5]*x[8] + 2*x[6]*x[7] - 3*x[6]*x[8] - x[7]^2 + 2*x[7]*x[8] - 3*x[8]^2,
x[3]*x[6] - x[4]*x[5] + 2*x[5]*x[6] - x[5]*x[8] - x[6]^2 + 3*x[6]*x[7] - 2*x[6]*x[8] + 2*x[7]*x[8],
x[3]*x[7] - x[5]^2 + x[5]*x[6] + 3*x[5]*x[8] + x[6]*x[7] - 2*x[6]*x[8] + x[7]^2 - 2*x[8]^2,
x[3]*x[8] - x[5]*x[8] - x[6]^2 + x[6]*x[7] + x[6]*x[8] + 2*x[7]*x[8] + x[8]^2,
x[4]*x[6] - x[5]^2 + 6*x[5]*x[8] + 2*x[6]^2 - 2*x[6]*x[7] - 2*x[6]*x[8] - x[7]^2 - 2*x[7]*x[8] - 4*x[8]^2,
x[4]*x[7] - x[5]*x[6] + 2*x[5]*x[8] + x[6]^2 - 2*x[6]*x[7] + x[6]*x[8] - 3*x[7]*x[8],
x[4]*x[8] - x[5]*x[8] - x[6]*x[7] + x[6]*x[8] + x[7]^2 - x[7]*x[8] + x[8]^2,
x[5]*x[7] - 3*x[5]*x[8] - x[6]^2 + x[6]*x[7] + x[6]*x[8] + x[7]*x[8] + 2*x[8]^2
*/

IsPrincipal(17*Dtor);
/*true (-20151121*$.1^30 + 27970959*$.1^29 + 1977516725*$.1^28 - 9371474317*$.1^27 - 36758351571*$.1^26 + 345515632111*$.1^25 - 315721748568*$.1^24 - 4033529284607*$.1^23 + 13754896237657*$.1^22 + 2600596003106*$.1^21 -
    105481325591720*$.1^20 + 222133567069926*$.1^19 + 28393727413239*$.1^18 - 950016854596987*$.1^17 + 1843731653667855*$.1^16 - 1031929707272882*$.1^15 - 2190292719018786*$.1^14 + 5835642037367628*$.1^13 - 6698556540346422*$.1^12 +
    3804333663344568*$.1^11 + 543125003108995*$.1^10 - 3335885053473574*$.1^9 + 3600420193697234*$.1^8 - 2406093162306058*$.1^7 + 1139387236157581*$.1^6 - 396134405625837*$.1^5 + 101685336217646*$.1^4 - 19149103801408*$.1^3 +
    2614271395953*$.1^2 - 249375536109*$.1 + 13618247877)/(169744*$.1^10 + 339488*$.1^9 - 2376416*$.1^8 - 2546160*$.1^7 + 8147712*$.1^6 - 2546160*$.1^5 - 4073856*$.1^4 + 6959504*$.1^3 - 3225136*$.1^2 + 509232*$.1)*$.6^3 +
    (20151121*$.1^24 - 48122080*$.1^23 - 1727883435*$.1^22 + 10557683589*$.1^21 + 8945293146*$.1^20 - 243089288646*$.1^19 + 626510683173*$.1^18 + 857225378947*$.1^17 - 7523717276905*$.1^16 + 13386131625646*$.1^15 + 6235152942271*$.1^14 -
    67389567727364*$.1^13 + 124941996702377*$.1^12 - 88303228800940*$.1^11 - 67600393567474*$.1^10 + 241469307245643*$.1^9 - 305220339540878*$.1^8 + 238429241760671*$.1^7 - 124028778275720*$.1^6 + 41450376180015*$.1^5 -
    7139666084656*$.1^4 - 341039977908*$.1^3 + 455332925538*$.1^2 - 88233036732*$.1 + 5586973488)/(169744*$.1^9 + 339488*$.1^8 - 2376416*$.1^7 - 2546160*$.1^6 + 8147712*$.1^5 - 2546160*$.1^4 - 4073856*$.1^3 + 6959504*$.1^2 - 3225136*$.1
    + 509232)*$.6^2 + (-300763*$.1^32 + 300763*$.1^31 + 19850358*$.1^30 - 34888508*$.1^29 - 540771874*$.1^28 + 1388923534*$.1^27 + 7442380435*$.1^26 - 27373042156*$.1^25 - 46436002622*$.1^24 + 295820862384*$.1^23 - 35231077057*$.1^22 -
    1712697911130*$.1^21 + 2358780145002*$.1^20 + 4039994185292*$.1^19 - 13425402250556*$.1^18 + 5744154036378*$.1^17 + 25446273472753*$.1^16 - 44912292751076*$.1^15 + 13537237362950*$.1^14 + 47966579513740*$.1^13 - 74930441127315*$.1^12
    + 41279628814233*$.1^11 + 12782509909062*$.1^10 - 38985679637696*$.1^9 + 31622029632443*$.1^8 - 14016045141401*$.1^7 + 3138596346061*$.1^6 + 35401008152*$.1^5 - 197720393148*$.1^4 + 28139386280*$.1^3 + 7851718878*$.1^2 -
    2934243828*$.1 + 316703439)/(169744*$.1^10 + 339488*$.1^9 - 2376416*$.1^8 - 2546160*$.1^7 + 8147712*$.1^6 - 2546160*$.1^5 - 4073856*$.1^4 + 6959504*$.1^3 - 3225136*$.1^2 + 509232*$.1)*$.6 + (300763*$.1^26 - 601526*$.1^25 -
    16241202*$.1^24 + 44212161*$.1^23 + 334147693*$.1^22 - 1223804647*$.1^21 - 2917100337*$.1^20 + 16510384885*$.1^19 + 2962816313*$.1^18 - 111646533993*$.1^17 + 126425727050*$.1^16 + 308020110427*$.1^15 - 820218597138*$.1^14 +
    202211085501*$.1^13 + 1552643572287*$.1^12 - 2296074969421*$.1^11 + 588904179942*$.1^10 + 1888482154873*$.1^9 - 2607556260452*$.1^8 + 1454516635907*$.1^7 - 135272670695*$.1^6 - 341756395374*$.1^5 + 243245083880*$.1^4 -
    81540759219*$.1^3 + 14242030339*$.1^2 - 1055377367*$.1 - 33384693)/(169744*$.1^9 + 339488*$.1^8 - 2376416*$.1^7 - 2546160*$.1^6 + 8147712*$.1^5 - 2546160*$.1^4 - 4073856*$.1^3 + 6959504*$.1^2 - 3225136*$.1 + 509232)
*/



primes:=[3,5,7];
A:=AbelianGroup([17]);
genusC:=g;
wMatrix:=Matrix(w);
gens:=[Dtor];
B0, iA0 := sub<A | A.1>;
W0 := {0*A.1};
bp:=deg2pb[1];
assert Degree(ResidueClassField(Decomposition(bp)[1,1])) eq 1;

B,iA,W:= MWSieve(X,wMatrix,genusC,primes, A, gens, bp, B0,iA0,W0,deg2);
B;
W;

// returns 1 - all points on X_0(103) are pullbbacks


f := quotMap;

load "quadPts.m";
deg2,p1,p2,plsbig:=searchDiv2(Xw,2,false);
[Degree(d): d in p1];
[Degree(d): d in p2];
//[Degree(d): d in plsbig];
pb1:=[Pullback(f,p):p in p1];
pb2:=[Pullback(f,p):p in p2];
//pb3:=[Pullback(f,p):p in plsbig];
pb:=pb1 cat pb2;
[Degree(d): d in pb];

pls1:=[]; pls2:=[]; 
for i:=1 to #pb do
dec:=Decomposition(pb[i]);
for j:=1 to #dec do	
	if Degree(dec[j,1]) eq 1 then pls1:=pls1 cat [dec[j,1]];end if;
	if Degree(dec[j,1]) eq 2 then pls2:=pls2 cat [dec[j,1]];end if;
end for;
end for;
for i in [1..#pls2] do
	if Degree(ResidueClassField(pls2[i])) gt 1 then
		K1<z>:=ResidueClassField(pls2[i]);
		d:=SquarefreeFactorization(Discriminant(K1));
		K<w>:=QuadraticField(d);
		w^2, pls2[i];
	end if;
end for;

j := jmap(X, 103);
print "j-invariant of the non-CM point over Q(sqrt 2885) is";
 j(RepresentativePoint(pls2[1]));
//(-24811430943412036323396353064960*z + 35982263935929364331785036841779200 : 1)
z^2;
//-363
